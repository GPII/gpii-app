{
    // Unique identifier for the deployment.
    site: "default.gpii.net",

    // Whether to hide the QSS save button.
    // `true` if the button should be hidden and `false` otherwise.
    hideQssSaveButton: false,

    // File containing default values which are used after resetting user settings
    // if relativePath is true then fileLocation is joined after %appdata%, so the
    // end result its something similar to:
    // "C:\Users\vagrant\AppData\Roaming\gpii\defaultSettings.json5"
    // if relativePath is false then fileLocation is assumed that its absolute path
    // and no changes are done to it
    defaultSettingsData: {
        relativePath: true,
        fileLocation: "gpii\\defaultSettings.json5"
    },

    // Configuration options for the QSS window
    qss: {
        // Whether a user can open Settings pages and Control Panels of the operating system
        // this is used to show different data in the sideCar container
        osSettingsAvailable: true,

        // Determines if the QSS will be shown automatically on Morphic's startup
        showQssOnStart: false,

        // Defines the delay in milliseconds before the tooltip is shown after a QSS button is selected
        tooltipDisplayDelay: 500, // ms

        // The scaling factor for the QSS
        scaleFactor: 1.2,
        urls: {
            account: "http://morphic.world/account",
            cloudFolder: "https://drive.google.com/drive/folders/11m-AKdP-0wjEBocpVtvnK8iE23P7hFTS",
            myGoogleDrive: "https://drive.google.com/",
            myOneDrive: "https://onedrive.live.com/about/signin/",
            myDropbox: "https://www.dropbox.com/login",
            customizeQss: "https://morphic.world/"
        },

        alwaysUseChrome: false,

        // The template that is used for every label of the language setting's options.
        // The "%" followed by a word specifies a variable and there are three possible variables:
        // - native - the name of the language in its native form
        // - local - the name of the language in the currently applied language
        // - english - the name of the of the language in English
        languageOptionLabel: {
            currentLanguageGroup: "%native",
            genericLanguage: "%native Â· %local"
        },
        // The code of OS default language `gpii-app` (it might be the one with which the system was installed with).
        // This language should always stay on top of the "Language" setting's menu list.
        // The code must be exactly matching one of the installed languages' code (with respect to the region).
        // In case the selected language code is missing, there simply won't be a special first setting.
        // NOTE: this is not related to the default language value defined for the language setting
        systemDefaultLanguage: "en-US",
        messages: {
            keyedOut: "To save you must insert a Morphic Key. Please ask for one at the Front Desk. If you have a key inserted and you see this message, remove the key and re-insert it, then you can Save."
        },

        // The path to the ShareX's executable file, used in the screenCaptureWidget.
        // This is the path where ShareX lives after installing Morphic. Can be adjusted for development purposes.
        shareXPath: "C:\\Program Files (x86)\\Morphic\\sharex\\sharex-portable\\sharex.exe",

        // The path to the DocuMorph's executable file, used in the service buttons.
        // This is the path where DocuMorph lives after installing Morphic. Can be adjusted for development purposes.
        docuMorphExecutable: "C:\\Program Files (x86)\\Morphic\\documorph\\DocuMorph.Widget.exe",

        // The path to the Snipping Tools's executable file, used in the service buttons.
        // This uses the internal Windows 10 snipping tool
        snippingToolCommand: "start ms-screenclip:",

        // list of the desired list of buttons shown in QSS
        // it uses the `id` attribute found in settings.json items

        // Custom buttons: Instead of a string with buttonId you add an object with the custom button data like this:
        // APP type buttons require absolute path to executable in the buttonData
        // WEB type buttons require a real valid url in the buttonData
        // KEY type buttons require a key combation with this exact syntax:
        // https://github.com/stegru/windows/blob/GPII-4135/gpii/node_modules/gpii-userInput/README.md
        // {
        //      "buttonId": "MakeYourOwn",
        //      "buttonName": "Launch Notepad", // Free text that will be use as button's label
        //      "buttonType": "APP", // APP, WEB, or KEY
        //      "buttonData": "C:\\Windows\\system32\\notepad.exe", // system path, or url, or key combination
        //      "fullScreen": true, // true, or false
        //      "popupText": "<p>Launch the Notepad application.</p>", // tooltip text
        //      "description": "The full description of the button..." // optional description
        // }

        // Separator buttons: Use any combination of the separators, even one after another:
        // - "separator", or "|" // For invisible separator
        // - "separator-visible", or "||" // For a gray separator (same size as the invisible one)

        // Grid buttons: Same as the separators, but their size is the same as a normal button
        // - "grid", or "-" // For invisible grid space
        // - "grid-visible", or "x" // For visible gray grid space (same size as the invisible one)

        buttonList: [
            {
                "buttonId": "MakeYourOwn",
                "buttonName": "Task Manager",
                "buttonType": "KEY",
                "buttonData": "^+{Escape}",
                "popupText": "<p>Executes Ctrl+Shift+Esc combination, which opens Windows Task Manager.</p>"
            }, {
                "buttonId": "MakeYourOwn",
                "buttonName": "Launch Notepad",
                "buttonType": "APP",
                "buttonData": "C:\\Windows\\system32\\notepad.exe",
                "fullScreen": true,
                "popupText": "<p>Launch the Notepad application.</p>",
                "description": "The full description of the button..."
            }, {
                "buttonId": "MakeYourOwn",
                "buttonName": "Open Reddit",
                "buttonType": "WEB",
                "buttonData": "www.reddit.com",
                "fullScreen": true,
                "popupText": "<p>Open Reddit in a web browser.</p>",
                "description": "The full description of the button..."
            },
            "language",
            "translate-tools",
            "screen-zoom",
            "text-zoom",
            "screen-capture",
            "snipping-tool",
            "office-simplification",
            "high-contrast",
            "color-vision",
            "mouse",
            "read-aloud",
            "volume",
            "launch-documorph",
            "cloud-folder-open",
            "usb-open",
            "url-google-drive",
            "url-one-drive",
            "url-dropbox",
            "url-customize-qss",
            "service-more",
            "service-save",
            "service-undo",
            "service-saved-settings",
            "service-reset-all",
            "service-close"
        ]
    },

    // Whether to hide the QSS when a user clicks outside of it
    closeQssOnClickOutside: true,

    // Whether to disable the displaying of notifications that suggest some
    // applications may need to be restarted in order for a changed setting to be
    // fully applied. An example for such setting is `Language`.
    // If set to `true`, such notifications will NOT be displayed.
    disableRestartWarning: true,

    // The shortcut that open the QSS. For posible values refer to: https://electronjs.org/docs/api/accelerator
    openQssShortcut: "Shift+Ctrl+AltOrOption+SuperOrCmd+M",

    // Configuration options for the QSS More panel
    qssMorePanel: {
        // These are default values. The actual dimensions of the QSS more panel
        // are qssScaleFactor * defaultWidth and qssScaleFactor * defaultHeight.
        defaultWidth: 600,
        defaultHeight: 450,
        movable: true,
        resizable: true,
        alwaysOnTop: true,

        urls: {
            moreInfo: "http://morphic.world/more"
        }
    },

    // Configuration options for the About dialog
    aboutDialog: {
        urls: {
            morphicHome: "https://morphic.world",
            submitSuggestions: "mailto:suggestions@morphic.world"
        }
    },

    // Configuration options for the dialog manager
    dialogManager: {
        showErrorDialog: true
    },

    // URL to the the place serving the survey triggers data. Note that it should return triggers in JSON format
    surveyTriggersUrl: "http://survey.gpii.net/survey-triggers.json",

    // The type of widget to use in the task bar - "gpii.app.trayButton", "gpii.app.trayIcon", or both.
    trayType: ["gpii.app.trayButton"],

    metrics: {
        // Can be true to disable everything, or "errors-only" to only capture errors.
        disable: false,
        // true to disable capturing key/mouse timings
        disableInput: false
    },

    autoLogin: {
        blockedUsers: ["admin*", "guest*", "student*", "visitor*", "volunteer*"],
        userIdSource: "username"
    },

    // Metrics switch (read by the service): "<morphic>:<metrics>"
    metricsSwitch: "on:on" // (eg, "on:on"=both on (default), "off:on"=metrics only)
}
