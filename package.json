{
    "name": "gpii-app",
    "version": "0.3.0",
    "description": "Electron application and libraries to run the GPII as a native user space application on the desktop",
    "main": "main.js",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/gpii/gpii-app.git"
    },
    "license": "BSD-3-Clause",
    "dependencies": {
        "electron": "1.8.4",
        "electron-edge-js": "8.3.2",
        "electron-localshortcut": "3.1.0",
        "gpii-windows": "0.3.0-dev.20180713T125916Z.3aecce7",
        "infusion": "3.0.0-dev.20180222T160835Z.6e1311a",
        "node-jqunit": "1.1.8",
        "request": "2.85.0",
        "winstrap": "0.5.11"
    },
    "devDependencies": {
        "electron-packager": "8.5.1",
        "eslint-config-fluid": "1.3.0",
        "fluid-grunt-eslint": "18.1.2",
        "gpii-testem": "2.1.1-dev.20180508T091631Z.1168649",
        "graceful-fs": "4.1.11",
        "grunt": "1.0.2",
        "grunt-jsonlint": "1.1.0",
        "grunt-shell": "2.1.0",
        "mkdirp": "0.5.1",
        "nyc": "11.7.1",
        "rimraf": "2.6.2",
        "shelljs": "0.3.0"
    },
    "scripts": {
        "start": "electron .",
        "dev": "electron . ./configs app.dev",
        "build": "grunt compileMessages",
        "pretest": "npm run pretest:clean && npm run build && npm run pretest:instrument",
        "pretest:clean": "node node_modules/rimraf/bin.js coverage instrumented reports build && node ./node_modules/mkdirp/bin/cmd.js coverage instrumented reports",
        "pretest:instrument": "node tests/lib/instrumentSource.js",
        "test": "powershell ./provisioning/Tests.ps1 -originalBuildScriptPath './node_modules/gpii-windows/provisioning'; ./node_modules/.bin/electron ./instrumented/tests.js",
        "posttest": "node node_modules/nyc/bin/nyc.js report --temp-directory coverage",
        "test:noCoverage": "npm run build && powershell ./provisioning/Tests.ps1 -originalBuildScriptPath './node_modules/gpii-windows/provisioning'; ./node_modules/.bin/electron tests.js"
    }
}
